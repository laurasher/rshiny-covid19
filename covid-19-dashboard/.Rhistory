library(sp)
library(dplyr)
library(flexdashboard) # devtools::install_github('rstudio/flexdashboard')
library(rgeos)
library(mapproj)
library(maptools)
library(readr)
library(ggthemes)
library(RCurl)
confirmed <- read.csv(text=getURL("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Confirmed.csv"), stringsAsFactors = FALSE)
confirmed$type <- 'confirmed'
confirmed$plotColor <- 'orange'
deaths <- read.csv(text=getURL("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Deaths.csv"), stringsAsFactors = FALSE)
deaths$type <- 'deaths'
deaths$plotColor <- 'red'
recovered <- read.csv(text=getURL("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Recovered.csv"), stringsAsFactors = FALSE)
recovered$plotColor <- 'green'
recovered$type <- 'recovered'
combined <- rbind(confirmed, deaths, recovered)
numDays <- length(colnames(combined))-4
colnames(combined)[5:] <- as.factor(1:numDays)
# Define the list of available metros
lookup <- structure(c(12060L, 12420L, 12580L, 13820L, 14460L, 15380L, 16740L,
16980L, 17140L, 17460L, 18140L, 19100L, 19740L, 19820L, 25540L,
26420L, 26900L, 27260L, 28140L, 29820L, 31100L, 31140L, 32820L,
33100L, 33340L, 33460L, 34980L, 35620L, 36420L, 36740L, 37980L,
38060L, 38300L, 38900L, 39300L, 40060L, 40380L, 40900L,
41180L, 41620L, 41700L, 41740L, 41860L, 42660L, 45300L,
47900L), .Names = c("Atlanta", "Austin", "Baltimore", "Birmingham",
"Boston", "Buffalo", "Charlotte", "Chicago", "Cincinnati", "Cleveland",
"Columbus", "Dallas-Fort Worth", "Denver", "Detroit", "Hartford", "Houston",
"Indianapolis", "Jacksonville", "Kansas City", "Las Vegas", "Los Angeles",
"Louisville", "Memphis", "Miami", "Milwaukee", "Minneapolis-St. Paul",
"Nashville", "New York", "Oklahoma City", "Orlando", "Philadelphia",
"Phoenix", "Pittsburgh", "Portland", "Providence",
"Richmond", "Rochester", "Sacramento", "St. Louis", "Salt Lake City",
"San Antonio", "San Diego", "San Francisco-Oakland", "Seattle", "Tampa-St. Petersburg",
"Washington"))
# Read in data, and subset for the selected metro
full_tracts <- readRDS('full_simp2.rds')
metro <- reactive({
m <- full_tracts[full_tracts$metroid == input$metro_name, ]
m$Distance <- m$distmiles
m$Score <- m$entropy
return(m)
})
filteredData <- reactive({
data.frame(
'lat' = combined$Lat,
'long' = combined$Long,
#'caseCnt'= combined %>% select(colnames(combined)[input$day + numHeadCols]) %>% pull(),
'type' = combined$type,
'plotColor' = combined$plotColor
)
})
# Generate data for the second tab
full_compare <- readRDS('comparative.rds')
compare_metro <- reactive({
out <- full_compare %>%
filter(metroid == input$metro_name) %>%
mutate(Distance = distance, Year = as.factor(year), Score = entropy)
return(out)
})
library(shiny)
library(leaflet) # devtools::install_github('rstudio/leaflet')
library(highcharter) # devtools::install_github('jbkunst/highcharter')
library(plotly) # devtools::install_github('ropensci/plotly')
library(ggplot2) # devtools::install_github('hadley/ggplot2')
library(sp)
library(dplyr)
library(flexdashboard) # devtools::install_github('rstudio/flexdashboard')
library(rgeos)
library(mapproj)
library(maptools)
library(readr)
library(ggthemes)
library(RCurl)
confirmed <- read.csv(text=getURL("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Confirmed.csv"), stringsAsFactors = FALSE)
confirmed$type <- 'confirmed'
confirmed$plotColor <- 'orange'
deaths <- read.csv(text=getURL("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Deaths.csv"), stringsAsFactors = FALSE)
deaths$type <- 'deaths'
deaths$plotColor <- 'red'
recovered <- read.csv(text=getURL("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Recovered.csv"), stringsAsFactors = FALSE)
recovered$plotColor <- 'green'
recovered$type <- 'recovered'
combined <- rbind(confirmed, deaths, recovered)
numDays <- length(colnames(combined))-4
colnames(combined)[5:] <- as.factor(1:numDays)
library(shiny)
library(leaflet) # devtools::install_github('rstudio/leaflet')
library(highcharter) # devtools::install_github('jbkunst/highcharter')
library(plotly) # devtools::install_github('ropensci/plotly')
library(ggplot2) # devtools::install_github('hadley/ggplot2')
library(sp)
library(dplyr)
library(flexdashboard) # devtools::install_github('rstudio/flexdashboard')
library(rgeos)
library(mapproj)
library(maptools)
library(readr)
library(ggthemes)
library(RCurl)
confirmed <- read.csv(text=getURL("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Confirmed.csv"), stringsAsFactors = FALSE)
confirmed$type <- 'confirmed'
confirmed$plotColor <- 'orange'
deaths <- read.csv(text=getURL("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Deaths.csv"), stringsAsFactors = FALSE)
deaths$type <- 'deaths'
deaths$plotColor <- 'red'
recovered <- read.csv(text=getURL("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Recovered.csv"), stringsAsFactors = FALSE)
recovered$plotColor <- 'green'
recovered$type <- 'recovered'
combined <- rbind(confirmed, deaths, recovered)
numDays <- length(colnames(combined))-4
colnames(combined)[5:numDays+4] <- as.factor(1:numDays)
library(shiny)
library(leaflet) # devtools::install_github('rstudio/leaflet')
library(highcharter) # devtools::install_github('jbkunst/highcharter')
library(plotly) # devtools::install_github('ropensci/plotly')
library(ggplot2) # devtools::install_github('hadley/ggplot2')
library(sp)
library(dplyr)
library(flexdashboard) # devtools::install_github('rstudio/flexdashboard')
library(rgeos)
library(mapproj)
library(maptools)
library(readr)
library(ggthemes)
library(RCurl)
confirmed <- read.csv(text=getURL("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Confirmed.csv"), stringsAsFactors = FALSE)
confirmed$type <- 'confirmed'
confirmed$plotColor <- 'orange'
deaths <- read.csv(text=getURL("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Deaths.csv"), stringsAsFactors = FALSE)
deaths$type <- 'deaths'
deaths$plotColor <- 'red'
recovered <- read.csv(text=getURL("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Recovered.csv"), stringsAsFactors = FALSE)
recovered$plotColor <- 'green'
recovered$type <- 'recovered'
combined <- rbind(confirmed, deaths, recovered)
numDays <- length(colnames(combined))-4
c#olnames(combined)[5:numDays+4] <- as.factor(1:numDays)
library(shiny)
library(leaflet) # devtools::install_github('rstudio/leaflet')
library(highcharter) # devtools::install_github('jbkunst/highcharter')
library(plotly) # devtools::install_github('ropensci/plotly')
library(ggplot2) # devtools::install_github('hadley/ggplot2')
library(sp)
library(dplyr)
library(flexdashboard) # devtools::install_github('rstudio/flexdashboard')
library(rgeos)
library(mapproj)
library(maptools)
library(readr)
library(ggthemes)
library(RCurl)
confirmed <- read.csv(text=getURL("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Confirmed.csv"), stringsAsFactors = FALSE)
confirmed$type <- 'confirmed'
confirmed$plotColor <- 'orange'
deaths <- read.csv(text=getURL("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Deaths.csv"), stringsAsFactors = FALSE)
deaths$type <- 'deaths'
deaths$plotColor <- 'red'
recovered <- read.csv(text=getURL("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Recovered.csv"), stringsAsFactors = FALSE)
recovered$plotColor <- 'green'
recovered$type <- 'recovered'
combined <- rbind(confirmed, deaths, recovered)
numDays <- length(colnames(combined))-4
#colnames(combined)[5:numDays+4] <- as.factor(1:numDays)
colnames(combined)
library(shiny)
library(leaflet) # devtools::install_github('rstudio/leaflet')
library(highcharter) # devtools::install_github('jbkunst/highcharter')
library(plotly) # devtools::install_github('ropensci/plotly')
library(ggplot2) # devtools::install_github('hadley/ggplot2')
library(sp)
library(dplyr)
library(flexdashboard) # devtools::install_github('rstudio/flexdashboard')
library(rgeos)
library(mapproj)
library(maptools)
library(readr)
library(ggthemes)
library(RCurl)
confirmed <- read.csv(text=getURL("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Confirmed.csv"), stringsAsFactors = FALSE)
confirmed$type <- 'confirmed'
confirmed$plotColor <- 'orange'
deaths <- read.csv(text=getURL("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Deaths.csv"), stringsAsFactors = FALSE)
deaths$type <- 'deaths'
deaths$plotColor <- 'red'
recovered <- read.csv(text=getURL("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Recovered.csv"), stringsAsFactors = FALSE)
recovered$plotColor <- 'green'
recovered$type <- 'recovered'
combined <- rbind(confirmed, deaths, recovered)
numDays <- length(colnames(combined))-6
colnames(combined)[5:numDays+4] <- as.factor(1:numDays)
library(shiny)
library(leaflet) # devtools::install_github('rstudio/leaflet')
library(highcharter) # devtools::install_github('jbkunst/highcharter')
library(plotly) # devtools::install_github('ropensci/plotly')
library(ggplot2) # devtools::install_github('hadley/ggplot2')
library(sp)
library(dplyr)
library(flexdashboard) # devtools::install_github('rstudio/flexdashboard')
library(rgeos)
library(mapproj)
library(maptools)
library(readr)
library(ggthemes)
library(RCurl)
confirmed <- read.csv(text=getURL("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Confirmed.csv"), stringsAsFactors = FALSE)
confirmed$type <- 'confirmed'
confirmed$plotColor <- 'orange'
deaths <- read.csv(text=getURL("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Deaths.csv"), stringsAsFactors = FALSE)
deaths$type <- 'deaths'
deaths$plotColor <- 'red'
recovered <- read.csv(text=getURL("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Recovered.csv"), stringsAsFactors = FALSE)
recovered$plotColor <- 'green'
recovered$type <- 'recovered'
combined <- rbind(confirmed, deaths, recovered)
numDays <- length(colnames(combined))-6
#colnames(combined)[5:numDays+4] <- as.factor(1:numDays)
library(shiny)
library(leaflet) # devtools::install_github('rstudio/leaflet')
library(highcharter) # devtools::install_github('jbkunst/highcharter')
library(plotly) # devtools::install_github('ropensci/plotly')
library(ggplot2) # devtools::install_github('hadley/ggplot2')
library(sp)
library(dplyr)
library(flexdashboard) # devtools::install_github('rstudio/flexdashboard')
library(rgeos)
library(mapproj)
library(maptools)
library(readr)
library(ggthemes)
library(RCurl)
confirmed <- read.csv(text=getURL("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Confirmed.csv"), stringsAsFactors = FALSE)
confirmed$type <- 'confirmed'
confirmed$plotColor <- 'orange'
deaths <- read.csv(text=getURL("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Deaths.csv"), stringsAsFactors = FALSE)
deaths$type <- 'deaths'
deaths$plotColor <- 'red'
recovered <- read.csv(text=getURL("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Recovered.csv"), stringsAsFactors = FALSE)
recovered$plotColor <- 'green'
recovered$type <- 'recovered'
combined <- rbind(confirmed, deaths, recovered)
numDays <- length(colnames(combined))-6
colnames(combined)[5:numDays+2] <- as.factor(1:numDays)
library(shiny)
library(leaflet) # devtools::install_github('rstudio/leaflet')
library(highcharter) # devtools::install_github('jbkunst/highcharter')
library(plotly) # devtools::install_github('ropensci/plotly')
library(ggplot2) # devtools::install_github('hadley/ggplot2')
library(sp)
library(dplyr)
library(flexdashboard) # devtools::install_github('rstudio/flexdashboard')
library(rgeos)
library(mapproj)
library(maptools)
library(readr)
library(ggthemes)
library(RCurl)
confirmed <- read.csv(text=getURL("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Confirmed.csv"), stringsAsFactors = FALSE)
confirmed$type <- 'confirmed'
confirmed$plotColor <- 'orange'
deaths <- read.csv(text=getURL("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Deaths.csv"), stringsAsFactors = FALSE)
deaths$type <- 'deaths'
deaths$plotColor <- 'red'
recovered <- read.csv(text=getURL("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Recovered.csv"), stringsAsFactors = FALSE)
recovered$plotColor <- 'green'
recovered$type <- 'recovered'
combined <- rbind(confirmed, deaths, recovered)
numDays <- length(colnames(combined))-6
#colnames(combined)[5:numDays+2] <- as.factor(1:numDays)
colnames(combine())
colnames(combined
)
colnames(combined)
library(shiny)
library(leaflet) # devtools::install_github('rstudio/leaflet')
library(highcharter) # devtools::install_github('jbkunst/highcharter')
library(plotly) # devtools::install_github('ropensci/plotly')
library(ggplot2) # devtools::install_github('hadley/ggplot2')
library(sp)
library(dplyr)
library(flexdashboard) # devtools::install_github('rstudio/flexdashboard')
library(rgeos)
library(mapproj)
library(maptools)
library(readr)
library(ggthemes)
library(RCurl)
confirmed <- read.csv(text=getURL("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Confirmed.csv"), stringsAsFactors = FALSE)
confirmed$type <- 'confirmed'
confirmed$plotColor <- 'orange'
deaths <- read.csv(text=getURL("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Deaths.csv"), stringsAsFactors = FALSE)
deaths$type <- 'deaths'
deaths$plotColor <- 'red'
recovered <- read.csv(text=getURL("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Recovered.csv"), stringsAsFactors = FALSE)
recovered$plotColor <- 'green'
recovered$type <- 'recovered'
combined <- rbind(confirmed, deaths, recovered)
numDays <- length(colnames(combined))-6
#colnames(combined)[5:numDays+2] <- as.factor(1:numDays)
combined[,6]
combined$Long
combined[,26]
combined$caseCnt
combined
seq(1:2)
seq(1:length(caseCnt))
setwd("~/Documents/shiny_gis_dashboard/gis_dashboard")
shiny::runApp()
View(combined)
View(combined)
setwd("~/Documents/covid-dashboard/R")
runApp()
rsconnect::deployApp('~/Documents/covid-dashboard/R')
rsconnect::deployApp('~/Documents/covid-dashboard/R'/)
rsconnect::deployApp('~/Documents/covid-dashboard/R/')
rsconnect::deployApp('~/Documents/covid-dashboard/R/app.R')
setwd("~/Documents/covid-dashboard/R_app")
rsconnect::deployApp('~/Documents/covid-dashboard/R_app/')
rsconnect::deployApp('~/Documents/covid-dashboard/covid-19-dashboard/')
rsconnect::deployApp('~/Documents/covid-dashboard/covid-19-dashboard/')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
ç
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
rsconnect::deployApp('~/Documents/covid-dashboard/covid-19-dashboard/')
runApp()
rsconnect::deployApp('~/Documents/covid-dashboard/covid-19-dashboard/')
runApp()
runApp()
runApp()
rsconnect::deployApp('~/Documents/covid-dashboard/covid-19-dashboard/')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(combined)
View(combined)
View(combined)
View(combined)
View(combined)
View(combined)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
combined.group_by("Country.Region")
combined %>% group_by("Country.Region")
combined %>% group_by("Country.Region") %>% summarise()
combined %>% group_by("Country.Region") %>% summarise("count")
combined %>% group_by("Country.Region") %>% summarise("n")
combined %>% group_by("Country.Region") %>% summarise(n)
tmp = combined %>% group_by("Country.Region")
tmp
View(tmp)
tmp = combined %>% group_by("Country.Region") %>% summarise(count=n())
tmp
View(tmp)
combined %>% group_by("Country.Region")
tmp = combined %>% group_by("Country.Region") %>% summarise(count=n(X1.22.20))
combined %>%
summarise_at(which(sapply(df, is.numeric) & names(df) != 'Registered'), sum)
combined %>%
summarise_at(which(sapply(df, is.numeric)), sum)
combined %>% group_by("Country.Region") %>%
summarise_at(which(sapply(df, is.numeric)), sum)
by_country <- combined %>% group_by("Country.Region")
by
by_country %>%
summarise_all(list(min, max))
by_country %>%
summarise_all(n())
by_country %>%
summarise_all(sum
by_country %>%
summarise_all(sum)
by_country %>%
summarise_all(sum = sum)
by_country %>%
summarise_all(list(~min(.), ~max(.)))
by_country %>%
summarise_all(list(~sum(.))
)
by_country %>%
summarise_all(list(~sum(.)))
by_country %>%
summarise_all(list(~n(.)))
by_country %>%
summarise_all(list(~n()))
tmp = by_country %>%
summarise_all(list(~n()))
View(tmp)
by_country %>%
summarise(count=sum(X1.22.20))
combined %>% group_by(Country.Region) %>%
summarise(count=sum(X1.22.20))
combined %>% group_by(Country.Region) %>%
summarise(count=sum())
combined %>% group_by(Country.Region) %>%
summarise(sum())
tmp = combined %>% group_by(Country.Region) %>%
summarise(sum())
View(tmp)
tmp = combined %>% group_by(Country.Region) %>%
summarise_if(is.numeric, sum)
tm,p
tmp
View(tmp)
runApp()
View(combined)
runApp()
runApp()
grouped_combined <- combined %>% filter(type == 'confirmed') %>% group_by(Country.Region) %>% summarise_if(is.numeric, sum)
View(grouped_combined)
grouped_combined[4]
grouped_combined %>% select(colnames(grouped_combined)[6]) %>% pull()
colnames(grouped_combined)
length(colnames(grouped_combined))
grouped_combined %>% select(colnames(grouped_combined)[length(colnames(grouped_combined))]) %>% pull()
grouped_combined$Country.Region
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages("shinythemes")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(combined)
combined %>% select(colnames(combined)[length(colnames(combined))]) %>% pull()
combined %>% select(colnames(combined)[4]) %>% pull()
sum(combined %>% select(colnames(combined)[4]) %>% pull())
sum(combined %>% select(colnames(combined)[6]) %>% pull())
runApp()
colnames(combined)
colnames(combined)
colnames(combined)[5]
ncols(combined)
ncol(combined)
ncol(combined)[1]
ncol(combined)[1]-2
colnames(combined)[ncol(combined)[1]-2]
runApp()
3*(log10(as.numeric(0)))
0/2
runApp()
runApp()
runApp()
runApp()
install.packages("shinyWidgets")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
pwd
getwd()
rsconnect::deployApp("/Users/asherlk1/Documents/covid-dashboard/covid-19-dashboard")
rsconnect::deployApp("/Users/asherlk1/Documents/covid-dashboard/covid-19-dashboard")
rsconnect::deployApp("/Users/asherlk1/Documents/covid-dashboard/covid-19-dashboard")
View(combined)
ncol(combined)[1]-(numHeadCols+numTailCols)
numHeadCols = 4
numTailCols = 2
ncol(combined)[1]-(numHeadCols+numTailCols)
runApp()
runApp()
runApp()
